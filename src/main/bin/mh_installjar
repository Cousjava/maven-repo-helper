#!/bin/bash --

set -e

. /usr/share/maven-repo-helper/mh_lib.sh

syntax()
{
   echo -e "Usage: mh_installjar [option]... [pom] [jar] [link]..."
   echo -e "Installs the jar file in /usr/share/maven-repo, at the correct location for"
   echo -e "Maven."
   echo -e "It can also create additional links to the jar, usually placed in"
   echo -e "/usr/share/java."
   echo -e ""
   echo -e "Where"
   echo -e "\t[pom] is the location of the POM associated with the jar to install."
   echo -e "\t  GroupId, artifactId and version will be extracted from this file."
   echo -e "\t[jar] is the path to the jar to install, usually located in the build"
   echo -e "\t  folder."
   echo -e "\t[link] is an additional link to the jar to install, usually there should"
   echo -e "\t  be a link to usr/share/java/$jar.jar and"
   echo -e "\t  usr/share/java/$jar-$version.jar to comply with the Java packaging"
   echo -e "\t  guidelines. Note that there is no need to specify those particular"
   echo -e "\t  links if the --java-lib option is used."
   echo -e "Options:"
   echo -e "\t-h --help: show this text"
   echo -e "\t-V --version: show the version"
   echo -e "\t-p<package> --package=<package>: package to act on "
   echo -e "\t-s<spec> --spec=<spec>: gives the location of the Maven spec file for"
   echo -e "\t  special properties. Optional, the default location is"
   echo -e "\t  debian/maven.spec"
   echo -e "\t-l --java-lib: Optional, if given it will create additional links into "
   echo -e "\t  /usr/share/java to comply with the Java specification. More precisely,"
   echo -e "\t  the links created will be /usr/share/java/$name-$version.jar and"
   echo -e "\t  /usr/share/java/$name.jar"
   echo -e "\t-n<name> --name=<name>: Optional, the name to use when installing the"
   echo -e "\t  library in /usr/share/java when --java-lib is used."
   echo -e "\t  Defaults to the artifact id found in the POM."
   echo -e "\t-r<version> --version=<version>: Optional, the version to use when"
   echo -e "\t  installing the library in /usr/share/java when --java-lib is used."
   echo -e "\t  Defaults to the version found in the POM."
   echo -e "\t-v --verbose: show more information while running"
   echo -e "\t-n --no-act: don't actually do anything, just print the results"
   exit 1
}

ARGS="s spec l java-lib n name r version v verbose n no-act" parseargs "$@"

if [ "$ARGC" -lt "2" ]; then
   syntax
fi

SPEC=$(getarg s spec)
SPEC=${SPEC:-debian/maven.spec}
PACKAGE=$(getarg p package)
PACKAGE=${PACKAGE:?"Package parameter (-p) is mandatory"}
JAVALIB=$(getarg l java-lib)
NAME=$(getarg l java-lib)
VERBOSE=$(getarg v verbose)
NOACT=$(getarg n no-act)
POM="${ARGV[0]}"
JAR="${ARGV[1]}"

DH_OPTS="${VERBOSE:+-v} ${NOACT:+-n}"

mkdir -p debian/tmp 2> /dev/null
mh_cleanpom $CLEAN_ARGS $POM debian/tmp/pom.xml debian/tmp/pom.properties debian/tmp/notused.properties $SPEC
source debian/tmp/pom.properties

GROUP_PATH=$(echo $GROUP_ID | tr . / )

# Install the jar in the Maven repository
cp $JAR debian/tmp/${ARTIFACT_ID}-${VERSION}.jar
dh_install $DH_OPTS -p${PACKAGE} --sourcedir=debian/tmp ${ARTIFACT_ID}-${VERSION}.jar \
	usr/share/maven-repo/${GROUP_PATH}/${ARTIFACT_ID}/${VERSION}

# Create the additional links
for (( i=2; i < $ARGC; i++ )); do
    LINK_JAR="${ARGV[i]}"
	dh_link $DH_OPTS -p${PACKAGE} usr/share/maven-repo/${GROUP_PATH}/${ARTIFACT_ID}/${VERSION}/${ARTIFACT_ID}-${VERSION}.jar \
        $LINK_JAR;
done
if [ -n "$JAVALIB" ]; then
    JAR_NAME=$(getarg n name)
    JAR_NAME=${JAR_NAME:-$ARTIFACT_ID}
    JAR_VERSION=$(getarg r version)
    JAR_VERSION=${JAR_VERSION:-$VERSION}
	dh_link $DH_OPTS -p${PACKAGE} usr/share/maven-repo/${GROUP_PATH}/${ARTIFACT_ID}/${VERSION}/${ARTIFACT_ID}-${VERSION}.jar \
        usr/share/java/$JAR_NAME.jar;
	dh_link $DH_OPTS -p${PACKAGE} usr/share/maven-repo/${GROUP_PATH}/${ARTIFACT_ID}/${VERSION}/${ARTIFACT_ID}-${VERSION}.jar \
        usr/share/java/$JAR_NAME-$JAR_VERSION.jar;
fi
